version: '3.4'

services:

  warehouse-api-consumer:
    image: ${DOCKER_REGISTRY-}warehouseapi
    container_name: warehouse-api-consumer
    build:
      context: .
      dockerfile: src/WarehouseApplication/Api/Dockerfile
    environment:
      CONNECTION_STRING: Server=sql-server-db,1433;Database=localWarehousedbConsumer;User Id=sa;Password=Secretochka2442;Encrypt=false;TrustServerCertificate=true



  warehouse-api-producer:
    image: ${DOCKER_REGISTRY-}warehouseapi
    container_name: warehouse-api-producer
    build:
      context: .
      dockerfile: src/WarehouseApplication/Api/Dockerfile
    environment:
      OWNER: "Secretochka"
      CONNECTION_STRING: Server=sql-server-db,1433;Database=localWarehousedbProducer;User Id=sa;Password=Secretochka2442;Encrypt=false;TrustServerCertificate=true

  sql-server-db:
    container_name: sql-server-db
    image: mcr.microsoft.com/mssql/server:2022-latest
    ports:
      - "1433:1433"
    environment:
      SA_PASSWORD: "Secretochka2442"
      ACCEPT_EULA: "Y"
    volumes:
      - ./sqlserv/data:/var/opt/mssql/data
      - ./sqlserv/log:/var/opt/mssql/log
      - ./sqlserv/secrets:/var/opt/mssql/secrets


  rabbitmq:
    restart: always
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - rabbitmq:/var/lib/rabbitmq/mnesia



  httpclientpusher:
    image: ${DOCKER_REGISTRY-}httpclientpusher
    build:
      context: .
      dockerfile: src/HttpClientPusher/Dockerfile
    depends_on:
    - rabbitmq
    - warehouse-api-consumer

volumes:
  rabbitmq:
    driver: local
