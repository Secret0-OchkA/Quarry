version: '3.4'

services:

  warehouse-api-consumer:
    image: ${DOCKER_REGISTRY-}warehouseapi
    container_name: warehouse-api-consumer
    build:
      context: .
      dockerfile: src/WarehouseApplication/Api/Dockerfile
    environment:
      CONNECTION_STRING: User ID=user;Password=password;Host=postgres-database;Port=5432;Database=localWarehousedbConsumer;
      healthcheck:
      test: curl --fail http://localhost/health || exit 1
      interval: 60s
      retries: 5
      start_period: 20s
      timeout: 10s


  warehouse-api-producer:
    image: ${DOCKER_REGISTRY-}warehouseapi
    container_name: warehouse-api-producer
    build:
      context: .
      dockerfile: src/WarehouseApplication/Api/Dockerfile
    environment:
      OWNER: "Secretochka"
      CONNECTION_STRING: User ID=user;Password=password;Host=postgres-database;Port=5432;Database=localWarehousedbProducer;
      healthcheck:
      test: curl --fail http://localhost/health || exit 1
      interval: 60s
      retries: 5
      start_period: 20s
      timeout: 10s

  postgres-database:
    container_name: postgres-database
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=user
      - POSTGRES_DB=database
      - PG_DATA=/var/lib/postgresql/data
    #volumes:
    #  - ./buildserver_pgdata:/var/lib/postgresql/data
    ports:
      - 5432:5432


  rabbitmq:
    restart: always
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - rabbitmq:/var/lib/rabbitmq/mnesia
    


  httpclientpusher:
    image: ${DOCKER_REGISTRY-}httpclientpusher
    build:
      context: .
      dockerfile: src/HttpClientPusher/Dockerfile
    depends_on:
    - rabbitmq
    - warehouse-api-consumer


volumes:
  rabbitmq:
    driver: local
